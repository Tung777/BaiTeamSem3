@model project_sem_3.Models.ProductDetail

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("ProductDetailCreate", "Admin", FormMethod.Post, new { @class = "product-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Thumbnails, htmlAttributes: new { @class = "control-label col-md" })
            <div class="col-md-10 uploaded">
                <button type="button" id="upload_widget" class="btn btn-primary">Upload files</button>
                @Html.ValidationMessageFor(model => model.Thumbnails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script type="text/javascript">
            function showUploadWidget() {
                cloudinary.openUploadWidget({
                    cloudName: "dyi6c1dgi",
                    uploadPreset: "m7jj1zvw",
                    sources: [
                        "local",
                        "url",
                        "camera"
                    ],
                    form: ".product-form",
                    fieldName: "thumbnails[]",
                    thumbnails: ".uploaded",
                    multiple: true
                },
                    (err, info) => {
                        if (!err) {
                            console.log("Upload Widget event - ", info);
                        }
                    });
            }

            document.getElementById("upload_widget").addEventListener("click", function () {
                showUploadWidget();
            }, false);

            $('body').on('click', '.cloudinary-delete', function () {
                var splittedLink = $(this).prev().attr('src').split('/');
                var imgId = splittedLink[splittedLink.length - 1].split('.')[0];
                $(`input[data-cloudinary-public-id="pj-sem-3/${imgId}"]`).remove();
                $(`li[img-cloudinary="${imgId}"]`).remove();
                return false;
            });
    </script>
}
