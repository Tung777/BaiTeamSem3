@model project_sem_3.Models.ProductDetail
@using project_sem_3.Models

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Create Product Details</h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Html.ActionLink("Product", "Product")</li>
        <li class="breadcrumb-item active" aria-current="page">CreateDetails</li>
    </ol>
</div>

<div class="row">
    <div class="col-lg-12">
        <!-- Horizontal Form -->
        <div class="card mb-4">
            <div class="card-body">

                @using (Html.BeginForm("ProductDetailCreate", "Admin", FormMethod.Post, new { @class = "product-form" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md" })
                            <div class="col-md">
                                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md" })
                            <div class="col-md">
                                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md" })
                            <div class="col-md">
                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" hidden>
                            @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md" })
                            <div class="col-md">
                                @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Thumbnails, htmlAttributes: new { @class = "control-label col-md" })
                            <div class="col-md">
                                @Html.EditorFor(model => model.Thumbnails, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Thumbnails, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md">
                                <input type="submit" value="Create" class="btn btn-outline-secondary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!--Row-->

@section Scripts {
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script type="text/javascript">
        function showUploadWidget() {
            cloudinary.openUploadWidget({
                cloudName: "dyi6c1dgi",
                uploadPreset: "m7jj1zvw",
                sources: [
                    "local",
                    "url",
                    "camera"
                ],
                form: ".product-form",
                fieldName: "thumbnails[]",
                thumbnails: ".uploaded",
                multiple: true
            },
                (err, info) => {
                    if (!err) {
                        console.log("Upload Widget event - ", info);
                    }
                });
        }

        document.getElementById("upload_widget").addEventListener("click", function () {
            showUploadWidget();
        }, false);

        $('body').on('click', '.cloudinary-delete', function () {
            var splittedLink = $(this).prev().attr('src').split('/');
            var imgId = splittedLink[splittedLink.length - 1].split('.')[0];
            $(`input[data-cloudinary-public-id="pj-sem-3/${imgId}"]`).remove();
            $(`li[img-cloudinary="${imgId}"]`).remove();
            return false;
        });
    </script>
}
